{"ast":null,"code":"var _jsxFileName = \"/Users/Tharun/PycharmProjects/SE/full_stack/django-rest-framework-using-reactjs--project/frontend/ecommerce/src/components/fetchapitmbd.js\",\n  _s = $RefreshSig$();\n// MovieDetailsFetcherPage.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MovieDetailsDisplayPage from \"./MovieDetailsDisplayPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieDetailsFetcherPage({\n  movieName\n}) {\n  _s();\n  const [movieDetails, setMovieDetails] = useState(null);\n  useEffect(() => {\n    const API_KEY = \"d61ae016cfddbd20b6e8194e558cc4d8\";\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(movieName)}&language=en-US`);\n\n        // Check if any movie found with the given name\n        if (response.data.results.length > 0) {\n          const movieId = response.data.results[0].id; // Get the ID of the first movie in the search results\n          const movieResponse = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n          setMovieDetails(movieResponse.data);\n        } else {\n          console.error(\"Movie not found.\");\n          setMovieDetails(null);\n        }\n      } catch (error) {\n        console.error(\"Error fetching movie details:\", error);\n        setMovieDetails(null);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieDetailsDisplayPage, {\n      movieDetails: movieDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieDetailsFetcherPage, \"3Xw5p5XygTBdYtFd5yWowQ3nnzY=\");\n_c = MovieDetailsFetcherPage;\nexport default MovieDetailsFetcherPage;\nvar _c;\n$RefreshReg$(_c, \"MovieDetailsFetcherPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","MovieDetailsDisplayPage","jsxDEV","_jsxDEV","MovieDetailsFetcherPage","movieName","_s","movieDetails","setMovieDetails","API_KEY","fetchMovieDetails","response","get","encodeURIComponent","data","results","length","movieId","id","movieResponse","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Tharun/PycharmProjects/SE/full_stack/django-rest-framework-using-reactjs--project/frontend/ecommerce/src/components/fetchapitmbd.js"],"sourcesContent":["// MovieDetailsFetcherPage.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport MovieDetailsDisplayPage from \"./MovieDetailsDisplayPage\";\n\nfunction MovieDetailsFetcherPage({ movieName }) {\n    const [movieDetails, setMovieDetails] = useState(null);\n\n    useEffect(() => {\n        const API_KEY = \"d61ae016cfddbd20b6e8194e558cc4d8\";\n\n        const fetchMovieDetails = async () => {\n            try {\n                const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(movieName)}&language=en-US`);\n                \n                // Check if any movie found with the given name\n                if (response.data.results.length > 0) {\n                    const movieId = response.data.results[0].id; // Get the ID of the first movie in the search results\n                    const movieResponse = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n                    setMovieDetails(movieResponse.data);\n                } else {\n                    console.error(\"Movie not found.\");\n                    setMovieDetails(null);\n                }\n            } catch (error) {\n                console.error(\"Error fetching movie details:\", error);\n                setMovieDetails(null);\n            }\n        };\n\n        fetchMovieDetails();\n\n    }, [movieName]);\n\n    return (\n        <div>\n            <h1>Loading...</h1>\n            <MovieDetailsDisplayPage movieDetails={movieDetails} />\n        </div>\n    );\n}\n\nexport default MovieDetailsFetcherPage;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,uBAAuB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,uBAAuBA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ,MAAMU,OAAO,GAAG,kCAAkC;IAElD,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,qDAAoDH,OAAQ,UAASI,kBAAkB,CAACR,SAAS,CAAE,iBAAgB,CAAC;;QAEtJ;QACA,IAAIM,QAAQ,CAACG,IAAI,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;UAClC,MAAMC,OAAO,GAAGN,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACG,EAAE,CAAC,CAAC;UAC7C,MAAMC,aAAa,GAAG,MAAMnB,KAAK,CAACY,GAAG,CAAE,sCAAqCK,OAAQ,YAAWR,OAAQ,iBAAgB,CAAC;UACxHD,eAAe,CAACW,aAAa,CAACL,IAAI,CAAC;QACvC,CAAC,MAAM;UACHM,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;UACjCb,eAAe,CAAC,IAAI,CAAC;QACzB;MACJ,CAAC,CAAC,OAAOa,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;QACrDb,eAAe,CAAC,IAAI,CAAC;MACzB;IACJ,CAAC;IAEDE,iBAAiB,CAAC,CAAC;EAEvB,CAAC,EAAE,CAACL,SAAS,CAAC,CAAC;EAEf,oBACIF,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBvB,OAAA,CAACF,uBAAuB;MAACM,YAAY,EAAEA;IAAa;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEd;AAACpB,EAAA,CAnCQF,uBAAuB;AAAAuB,EAAA,GAAvBvB,uBAAuB;AAqChC,eAAeA,uBAAuB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}