{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst useRecommend = () => {\n  _s();\n  // Renamed function to use camelCase convention and started with uppercase\n  const [recommendation, setRecommendation] = useState([]); // Renamed state and setter\n\n  useEffect(() => {\n    async function fetchMyRecommend() {\n      // Renamed function to use camelCase convention\n      try {\n        const accessToken = localStorage.getItem(\"accessToken\");\n        const response = await axios.get(\"/recommend/\", {\n          headers: {\n            Authorization: `Bearer ${accessToken}`\n          }\n        });\n        setRecommendation(response.data); // Set recommendation directly with response.data\n      } catch (error) {\n        console.error(\"Error fetching recommendation:\", error);\n      }\n    }\n    fetchMyRecommend();\n  }, []);\n  return recommendation;\n};\n_s(useRecommend, \"uvQdda15HeL660SDkx4uFc2gtUQ=\");\nexport default useRecommend; // Exporting the custom hook with corrected function name","map":{"version":3,"names":["useState","useEffect","axios","useRecommend","_s","recommendation","setRecommendation","fetchMyRecommend","accessToken","localStorage","getItem","response","get","headers","Authorization","data","error","console"],"sources":["/Users/Tharun/PycharmProjects/SE/full_stack/django-rest-framework-using-reactjs--project/frontend/ecommerce/src/components/fetchrecommenddata.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst useRecommend = () => { // Renamed function to use camelCase convention and started with uppercase\n  const [recommendation, setRecommendation] = useState([]); // Renamed state and setter\n\n  useEffect(() => {\n    async function fetchMyRecommend() { // Renamed function to use camelCase convention\n      try {\n        const accessToken = localStorage.getItem(\"accessToken\");\n        const response = await axios.get(\n          \"/recommend/\",\n          {\n            headers: {\n              Authorization: `Bearer ${accessToken}`,\n            },\n          }\n        );\n\n        setRecommendation(response.data); // Set recommendation directly with response.data\n      } catch (error) {\n        console.error(\"Error fetching recommendation:\", error);\n      }\n    }\n    fetchMyRecommend();\n  }, []);\n\n  return recommendation;\n};\n\nexport default useRecommend; // Exporting the custom hook with corrected function name\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAE;EAC3B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1DC,SAAS,CAAC,MAAM;IACd,eAAeM,gBAAgBA,CAAA,EAAG;MAAE;MAClC,IAAI;QACF,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;QACvD,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC9B,aAAa,EACb;UACEC,OAAO,EAAE;YACPC,aAAa,EAAG,UAASN,WAAY;UACvC;QACF,CACF,CAAC;QAEDF,iBAAiB,CAACK,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC;MACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF;IACAT,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,cAAc;AACvB,CAAC;AAACD,EAAA,CAzBID,YAAY;AA2BlB,eAAeA,YAAY,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}