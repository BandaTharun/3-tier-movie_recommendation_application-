{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from \"react\";\nexport const addMovie = (movieTitle, movieGenre, imageUrl) => {\n  const accessToken = localStorage.getItem(\"accessToken\");\n  return axios.post('/adminmanage_movies/', {\n    title: movieTitle,\n    genre: movieGenre,\n    image_url: imageUrl\n  }, {\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    // Handle success\n    console.log('Movie added successfully:', response.data);\n    return response.data; // Return response data\n  }).catch(error => {\n    // Handle error\n    console.error('Error adding movie:', error);\n    throw error; // Throw error to catch it in the calling function\n  });\n};\nexport const deleteMovie = movieTitle => {\n  const accessToken = localStorage.getItem(\"accessToken\");\n  return axios.delete('/adminmanage_movies/', {\n    title: movieTitle\n  }, {\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    // Handle success\n    console.log('Movie deleted successfully:', response.data);\n    return response.data; // Return response data\n  }).catch(error => {\n    // Handle error\n    console.error('Error deleting movie:', error);\n    throw error; // Throw error to catch it in the calling function\n  });\n};\nexport const updateMovie = (movieTitle, movieGenre, imageUrl) => {\n  // Changed the parameters to include genre and imageUrl\n  const accessToken = localStorage.getItem(\"accessToken\");\n  return axios.put(`/adminmanage_movies/${movieTitle}`, {\n    // Changed the URL to include movie title\n    genre: movieGenre,\n    // Added genre field\n    image_url: imageUrl // Added imageUrl field\n  }, {\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    // Handle success\n    console.log('Movie updated successfully:', response.data);\n    return response.data; // Return response data\n  }).catch(error => {\n    // Handle error\n    console.error('Error updating movie:', error);\n    throw error; // Throw error to catch it in the calling function\n  });\n};\nexport default function AdmindataManageMovies() {\n  // No need to return JSX from this component\n  return null;\n}\n_c = AdmindataManageMovies;\nvar _c;\n$RefreshReg$(_c, \"AdmindataManageMovies\");","map":{"version":3,"names":["React","axios","useState","useEffect","addMovie","movieTitle","movieGenre","imageUrl","accessToken","localStorage","getItem","post","title","genre","image_url","headers","Authorization","then","response","console","log","data","catch","error","deleteMovie","delete","updateMovie","put","AdmindataManageMovies","_c","$RefreshReg$"],"sources":["/Users/Tharun/PycharmProjects/SE/full_stack/django-rest-framework-using-reactjs--project/frontend/ecommerce/src/components/admindataManagemovies.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from \"react\";\n\nexport const addMovie = (movieTitle, movieGenre, imageUrl) => {\n  const accessToken = localStorage.getItem(\"accessToken\");\n  return axios.post('/adminmanage_movies/', {\n    title: movieTitle,\n    genre: movieGenre,\n    image_url: imageUrl\n  }, {\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n      \"Content-Type\": \"application/json\"\n    }\n  })\n  .then(response => {\n    // Handle success\n    console.log('Movie added successfully:', response.data);\n    return response.data; // Return response data\n  })\n  .catch(error => {\n    // Handle error\n    console.error('Error adding movie:', error);\n    throw error; // Throw error to catch it in the calling function\n  });\n};\n\n\n\nexport const deleteMovie = (movieTitle) => {\n  const accessToken = localStorage.getItem(\"accessToken\");\n  return axios.delete('/adminmanage_movies/', {\n    title : movieTitle,\n  }, {\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n      \"Content-Type\": \"application/json\"\n    }\n  })\n  .then(response => {\n    // Handle success\n    console.log('Movie deleted successfully:', response.data);\n    return response.data; // Return response data\n  })\n  .catch(error => {\n    // Handle error\n    console.error('Error deleting movie:', error);\n    throw error; // Throw error to catch it in the calling function\n  });\n};\n\n\n\n\n\nexport const updateMovie = (movieTitle, movieGenre, imageUrl) => { // Changed the parameters to include genre and imageUrl\n  const accessToken = localStorage.getItem(\"accessToken\");\n  return axios.put(`/adminmanage_movies/${movieTitle}`, { // Changed the URL to include movie title\n    genre: movieGenre, // Added genre field\n    image_url: imageUrl // Added imageUrl field\n  }, {\n    headers: {\n      Authorization: `Bearer ${accessToken}`,\n      \"Content-Type\": \"application/json\"\n    }\n  })\n  .then(response => {\n    // Handle success\n    console.log('Movie updated successfully:', response.data);\n    return response.data; // Return response data\n  })\n  .catch(error => {\n    // Handle error\n    console.error('Error updating movie:', error);\n    throw error; // Throw error to catch it in the calling function\n  });\n};\n\n\n\nexport default function AdmindataManageMovies() {\n  // No need to return JSX from this component\n  return null;\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,OAAO,MAAMC,QAAQ,GAAGA,CAACC,UAAU,EAAEC,UAAU,EAAEC,QAAQ,KAAK;EAC5D,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACvD,OAAOT,KAAK,CAACU,IAAI,CAAC,sBAAsB,EAAE;IACxCC,KAAK,EAAEP,UAAU;IACjBQ,KAAK,EAAEP,UAAU;IACjBQ,SAAS,EAAEP;EACb,CAAC,EAAE;IACDQ,OAAO,EAAE;MACPC,aAAa,EAAG,UAASR,WAAY,EAAC;MACtC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CACDS,IAAI,CAACC,QAAQ,IAAI;IAChB;IACAC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,QAAQ,CAACG,IAAI,CAAC;IACvD,OAAOH,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACd;IACAJ,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC3C,MAAMA,KAAK,CAAC,CAAC;EACf,CAAC,CAAC;AACJ,CAAC;AAID,OAAO,MAAMC,WAAW,GAAInB,UAAU,IAAK;EACzC,MAAMG,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACvD,OAAOT,KAAK,CAACwB,MAAM,CAAC,sBAAsB,EAAE;IAC1Cb,KAAK,EAAGP;EACV,CAAC,EAAE;IACDU,OAAO,EAAE;MACPC,aAAa,EAAG,UAASR,WAAY,EAAC;MACtC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CACDS,IAAI,CAACC,QAAQ,IAAI;IAChB;IACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,QAAQ,CAACG,IAAI,CAAC;IACzD,OAAOH,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACd;IACAJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK,CAAC,CAAC;EACf,CAAC,CAAC;AACJ,CAAC;AAMD,OAAO,MAAMG,WAAW,GAAGA,CAACrB,UAAU,EAAEC,UAAU,EAAEC,QAAQ,KAAK;EAAE;EACjE,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACvD,OAAOT,KAAK,CAAC0B,GAAG,CAAE,uBAAsBtB,UAAW,EAAC,EAAE;IAAE;IACtDQ,KAAK,EAAEP,UAAU;IAAE;IACnBQ,SAAS,EAAEP,QAAQ,CAAC;EACtB,CAAC,EAAE;IACDQ,OAAO,EAAE;MACPC,aAAa,EAAG,UAASR,WAAY,EAAC;MACtC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CACDS,IAAI,CAACC,QAAQ,IAAI;IAChB;IACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,QAAQ,CAACG,IAAI,CAAC;IACzD,OAAOH,QAAQ,CAACG,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;IACd;IACAJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK,CAAC,CAAC;EACf,CAAC,CAAC;AACJ,CAAC;AAID,eAAe,SAASK,qBAAqBA,CAAA,EAAG;EAC9C;EACA,OAAO,IAAI;AACb;AAACC,EAAA,GAHuBD,qBAAqB;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}