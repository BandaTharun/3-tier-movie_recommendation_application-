{"ast":null,"code":"var _jsxFileName = \"/Users/Tharun/PycharmProjects/SE/full_stack/django-rest-framework-using-reactjs--project/frontend/ecommerce/src/components/fetchapitmbd.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieDetails({\n  movieName\n}) {\n  _s();\n  const [movieDetails, setMovieDetails] = useState(null);\n  useEffect(() => {\n    const API_KEY = \"d61ae016cfddbd20b6e8194e558cc4d8\";\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(movieName)}&language=en-US`);\n\n        // Check if any movie found with the given name\n        if (response.data.results.length > 0) {\n          const movieId = response.data.results[0].id; // Get the ID of the first movie in the search results\n          const movieResponse = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n          setMovieDetails(movieResponse.data);\n        } else {\n          console.error(\"Movie not found.\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching movie details:\", error);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieName]);\n  if (!movieDetails) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 16\n    }, this); // Return loading message while fetching\n  }\n\n  // Render movie details\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movieDetails.movieName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Overview: \", movieDetails.overview]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(MovieDetails, \"3Xw5p5XygTBdYtFd5yWowQ3nnzY=\");\n_c = MovieDetails;\nexport default MovieDetails;\nvar _c;\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","MovieDetails","movieName","_s","movieDetails","setMovieDetails","API_KEY","fetchMovieDetails","response","get","encodeURIComponent","data","results","length","movieId","id","movieResponse","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","overview","_c","$RefreshReg$"],"sources":["/Users/Tharun/PycharmProjects/SE/full_stack/django-rest-framework-using-reactjs--project/frontend/ecommerce/src/components/fetchapitmbd.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction MovieDetails({ movieName }) {\n    const [movieDetails, setMovieDetails] = useState(null);\n\n    useEffect(() => {\n        const API_KEY = \"d61ae016cfddbd20b6e8194e558cc4d8\";\n\n        const fetchMovieDetails = async () => {\n            try {\n                const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(movieName)}&language=en-US`);\n                \n                // Check if any movie found with the given name\n                if (response.data.results.length > 0) {\n                    const movieId = response.data.results[0].id; // Get the ID of the first movie in the search results\n                    const movieResponse = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n                    setMovieDetails(movieResponse.data);\n                } else {\n                    console.error(\"Movie not found.\");\n                }\n            } catch (error) {\n                console.error(\"Error fetching movie details:\", error);\n            }\n        };\n\n        fetchMovieDetails();\n\n    }, [movieName]);\n\n    if (!movieDetails) {\n        return <div>Loading...</div>; // Return loading message while fetching\n    }\n\n    // Render movie details\n    return (\n        <div>\n            <h1>{movieDetails.movieName}</h1>\n            <p>Overview: {movieDetails.overview}</p>\n            {/* Display other movie details as needed */}\n        </div>\n    );\n}\n\nexport default MovieDetails;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ,MAAMS,OAAO,GAAG,kCAAkC;IAElD,MAAMC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAE,qDAAoDH,OAAQ,UAASI,kBAAkB,CAACR,SAAS,CAAE,iBAAgB,CAAC;;QAEtJ;QACA,IAAIM,QAAQ,CAACG,IAAI,CAACC,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;UAClC,MAAMC,OAAO,GAAGN,QAAQ,CAACG,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACG,EAAE,CAAC,CAAC;UAC7C,MAAMC,aAAa,GAAG,MAAMlB,KAAK,CAACW,GAAG,CAAE,sCAAqCK,OAAQ,YAAWR,OAAQ,iBAAgB,CAAC;UACxHD,eAAe,CAACW,aAAa,CAACL,IAAI,CAAC;QACvC,CAAC,MAAM;UACHM,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC;QACrC;MACJ,CAAC,CAAC,OAAOA,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACzD;IACJ,CAAC;IAEDX,iBAAiB,CAAC,CAAC;EAEvB,CAAC,EAAE,CAACL,SAAS,CAAC,CAAC;EAEf,IAAI,CAACE,YAAY,EAAE;IACf,oBAAOJ,OAAA;MAAAmB,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAC,CAAC;EAClC;;EAEA;EACA,oBACIvB,OAAA;IAAAmB,QAAA,gBACInB,OAAA;MAAAmB,QAAA,EAAKf,YAAY,CAACF;IAAS;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjCvB,OAAA;MAAAmB,QAAA,GAAG,YAAU,EAACf,YAAY,CAACoB,QAAQ;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEvC,CAAC;AAEd;AAACpB,EAAA,CAvCQF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AAyCrB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}