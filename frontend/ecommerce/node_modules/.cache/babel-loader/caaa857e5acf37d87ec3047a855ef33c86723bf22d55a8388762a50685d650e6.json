{"ast":null,"code":"var _jsxFileName = \"/Users/Tharun/PycharmProjects/SE/full_stack/django-rest-framework-using-reactjs--project/frontend/ecommerce/src/components/Myratings.js\";\nimport React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport myratings from \"./fetchMyRatingdata\";\nimport movies_data from \"./fetchmoviesdata\";\nimport Mylistsscreen from './Mylistsscreen'; // Assuming Mylistsscreen is imported from the correct location\nimport Footer from \"./Footer\";\nimport Myratingscreen from './myratingscreen';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Myratings() {\n  const rating = myratings();\n  const movies = movies_data();\n  const usermovieIds = rating.map(item => item.movie);\n  const userratings = rating.map(item => item.rating);\n  function getMovieDetails(usermovieIds) {\n    return usermovieIds.map(movieId => {\n      const movie = movies.find(movie => movie.id === movieId);\n      return movie ? movie : `Movie with ID ${movieId} not found`;\n    });\n  }\n  const usermovieDetails = getMovieDetails(usermovieIds);\n\n  // Zip usermovieDetails with userratings\n  const zippedData = usermovieDetails.map((movie, index) => ({\n    movie,\n    rating: userratings[index]\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MyRatings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: zippedData.map(({\n          movie,\n          rating\n        }) => /*#__PURE__*/_jsxDEV(Col, {\n          sm: 12,\n          md: 6,\n          lg: 4,\n          xl: 3,\n          children: /*#__PURE__*/_jsxDEV(Myratingscreen, {\n            product: movie,\n            rating: rating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true);\n}\n_c = Myratings;\nexport default Myratings;\nvar _c;\n$RefreshReg$(_c, \"Myratings\");","map":{"version":3,"names":["React","Container","Row","Col","myratings","movies_data","Mylistsscreen","Footer","Myratingscreen","jsxDEV","_jsxDEV","Fragment","_Fragment","Myratings","rating","movies","usermovieIds","map","item","movie","userratings","getMovieDetails","movieId","find","id","usermovieDetails","zippedData","index","children","fileName","_jsxFileName","lineNumber","columnNumber","sm","md","lg","xl","product","_c","$RefreshReg$"],"sources":["/Users/Tharun/PycharmProjects/SE/full_stack/django-rest-framework-using-reactjs--project/frontend/ecommerce/src/components/Myratings.js"],"sourcesContent":["import React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport myratings from \"./fetchMyRatingdata\"; \nimport movies_data from \"./fetchmoviesdata\";\nimport Mylistsscreen from './Mylistsscreen'; // Assuming Mylistsscreen is imported from the correct location\nimport Footer from \"./Footer\";\nimport Myratingscreen from './myratingscreen';\n\nfunction Myratings() {\n    const rating = myratings();\n    const movies = movies_data();\n\n    const usermovieIds = rating.map(item => item.movie);\n    const userratings = rating.map(item => item.rating);\n\n    function getMovieDetails(usermovieIds) {\n        return usermovieIds.map(movieId => {\n            const movie = movies.find(movie => movie.id === movieId);\n            return movie ? movie : `Movie with ID ${movieId} not found`;\n        });\n    }\n\n    const usermovieDetails = getMovieDetails(usermovieIds);\n\n    // Zip usermovieDetails with userratings\n    const zippedData = usermovieDetails.map((movie, index) => ({ movie, rating: userratings[index] }));\n\n    return (\n        <>\n            <Container>\n                <br />\n                <h1>MyRatings</h1>\n                <Row>\n                    {zippedData.map(({ movie, rating }) => (\n                        <Col key={movie.id} sm={12} md={6} lg={4} xl={3}>\n                            <Myratingscreen product={movie} rating={rating} /> \n                        </Col>\n                    ))}\n                </Row>\n            </Container>\n            <Footer /> {/* Assuming Footer is imported and declared somewhere */} \n        </>\n    );\n}\n\nexport default Myratings;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,OAAOC,SAAS,MAAM,qBAAqB;AAC3C,OAAOC,WAAW,MAAM,mBAAmB;AAC3C,OAAOC,aAAa,MAAM,iBAAiB,CAAC,CAAC;AAC7C,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,SAASC,SAASA,CAAA,EAAG;EACjB,MAAMC,MAAM,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAMW,MAAM,GAAGV,WAAW,CAAC,CAAC;EAE5B,MAAMW,YAAY,GAAGF,MAAM,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAAC;EACnD,MAAMC,WAAW,GAAGN,MAAM,CAACG,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACJ,MAAM,CAAC;EAEnD,SAASO,eAAeA,CAACL,YAAY,EAAE;IACnC,OAAOA,YAAY,CAACC,GAAG,CAACK,OAAO,IAAI;MAC/B,MAAMH,KAAK,GAAGJ,MAAM,CAACQ,IAAI,CAACJ,KAAK,IAAIA,KAAK,CAACK,EAAE,KAAKF,OAAO,CAAC;MACxD,OAAOH,KAAK,GAAGA,KAAK,GAAI,iBAAgBG,OAAQ,YAAW;IAC/D,CAAC,CAAC;EACN;EAEA,MAAMG,gBAAgB,GAAGJ,eAAe,CAACL,YAAY,CAAC;;EAEtD;EACA,MAAMU,UAAU,GAAGD,gBAAgB,CAACR,GAAG,CAAC,CAACE,KAAK,EAAEQ,KAAK,MAAM;IAAER,KAAK;IAAEL,MAAM,EAAEM,WAAW,CAACO,KAAK;EAAE,CAAC,CAAC,CAAC;EAElG,oBACIjB,OAAA,CAAAE,SAAA;IAAAgB,QAAA,gBACIlB,OAAA,CAACT,SAAS;MAAA2B,QAAA,gBACNlB,OAAA;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACNtB,OAAA;QAAAkB,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClBtB,OAAA,CAACR,GAAG;QAAA0B,QAAA,EACCF,UAAU,CAACT,GAAG,CAAC,CAAC;UAAEE,KAAK;UAAEL;QAAO,CAAC,kBAC9BJ,OAAA,CAACP,GAAG;UAAgB8B,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAAAR,QAAA,eAC5ClB,OAAA,CAACF,cAAc;YAAC6B,OAAO,EAAElB,KAAM;YAACL,MAAM,EAAEA;UAAO;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GAD5Cb,KAAK,CAACK,EAAE;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACZtB,OAAA,CAACH,MAAM;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA,eACb,CAAC;AAEX;AAACM,EAAA,GAnCQzB,SAAS;AAqClB,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}