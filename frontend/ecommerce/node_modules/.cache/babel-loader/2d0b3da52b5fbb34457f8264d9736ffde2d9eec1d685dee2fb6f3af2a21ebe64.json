{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport default function AdmindataManageMovies() {\n  _s();\n  const [token, setToken] = useState('');\n  useEffect(() => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    if (accessToken) {\n      // Set the success token value\n      setToken(accessToken);\n    } else {\n      // Display message to the user if not logged in\n      console.log(\"You haven't been logged in.\");\n    }\n  }, []);\n\n  // No need to return JSX from this component\n  return null;\n}\n_s(AdmindataManageMovies, \"vf+oyXHY90mQMbpq6nUOg8QmBuc=\");\n_c = AdmindataManageMovies;\nexport const addMovie = (movieTitle, movieGenre, imageUrl, token) => {\n  return axios.post('/adminmanage_movies/', {\n    title: movieTitle,\n    genre: movieGenre,\n    image_url: imageUrl\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    // Handle success\n    console.log('Movie added successfully:', response.data);\n    return response.data; // Return response data\n  }).catch(error => {\n    // Handle error\n    console.error('Error adding movie:', error);\n    throw error; // Throw error to catch it in the calling function\n  });\n};\nexport const updateMovie = (movieTitle, token) => {\n  return axios.put('/adminmanage_movies/', {\n    title: movieTitle\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    // Handle success\n    console.log('Movie updated successfully:', response.data);\n    return response.data; // Return response data\n  }).catch(error => {\n    // Handle error\n    console.error('Error updating movie:', error);\n    throw error; // Throw error to catch it in the calling function\n  });\n};\nexport const deleteMovie = (movieTitle, token) => {\n  return axios.delete(\"/adminmanage_movies/\", {\n    data: {\n      title: movieTitle\n    },\n    // Specify the request body with the movie title\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    // Handle success\n    console.log('Movie deleted successfully:', response.data);\n    return response.data; // Return response data\n  }).catch(error => {\n    // Handle error\n    console.error('Error deleting movie:', error);\n    throw error; // Throw error to catch it in the calling function\n  });\n};\nvar _c;\n$RefreshReg$(_c, \"AdmindataManageMovies\");","map":{"version":3,"names":["React","useState","useEffect","axios","AdmindataManageMovies","_s","token","setToken","accessToken","localStorage","getItem","console","log","_c","addMovie","movieTitle","movieGenre","imageUrl","post","title","genre","image_url","headers","Authorization","then","response","data","catch","error","updateMovie","put","deleteMovie","delete","$RefreshReg$"],"sources":["/Users/Tharun/PycharmProjects/SE/full_stack/django-rest-framework-using-reactjs--project/frontend/ecommerce/src/components/admindataManagemovies.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nexport default function AdmindataManageMovies() {\n    const [token, setToken] = useState('');\n  \n    useEffect(() => {\n      const accessToken = localStorage.getItem(\"accessToken\");\n  \n      if (accessToken) {\n        // Set the success token value\n        setToken(accessToken);\n      } else {\n        // Display message to the user if not logged in\n        console.log(\"You haven't been logged in.\");\n      }\n    }, []);\n  \n    // No need to return JSX from this component\n    return null;\n  }\n\n  \nexport const addMovie = (movieTitle, movieGenre, imageUrl, token) => {\n  return axios.post('/adminmanage_movies/', {\n    title: movieTitle,\n    genre: movieGenre,\n    image_url: imageUrl\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  })\n  .then(response => {\n    // Handle success\n    console.log('Movie added successfully:', response.data);\n    return response.data; // Return response data\n  })\n  .catch(error => {\n    // Handle error\n    console.error('Error adding movie:', error);\n    throw error; // Throw error to catch it in the calling function\n  });\n};\n\nexport const updateMovie = (movieTitle, token) => {\n  return axios.put('/adminmanage_movies/', {\n    title: movieTitle\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  })\n  .then(response => {\n    // Handle success\n    console.log('Movie updated successfully:', response.data);\n    return response.data; // Return response data\n  })\n  .catch(error => {\n    // Handle error\n    console.error('Error updating movie:', error);\n    throw error; // Throw error to catch it in the calling function\n  });\n};\n\nexport const deleteMovie = (movieTitle, token) => {\n  return axios.delete(\"/adminmanage_movies/\", {\n    data: { title: movieTitle }, // Specify the request body with the movie title\n    headers: {\n      Authorization: `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    },\n  })\n  .then(response => {\n    // Handle success\n    console.log('Movie deleted successfully:', response.data);\n    return response.data; // Return response data\n  })\n  .catch(error => {\n    // Handle error\n    console.error('Error deleting movie:', error);\n    throw error; // Throw error to catch it in the calling function\n  });\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}