{"ast":null,"code":"// MovieDetailsFetcher.jsx\nimport{useEffect}from\"react\";import axios from\"axios\";function MovieDetailsFetcher(_ref){let{movieName,onMovieDetailsFetched}=_ref;useEffect(()=>{const API_KEY=\"d61ae016cfddbd20b6e8194e558cc4d8\";const fetchMovieDetails=async()=>{try{const response=await axios.get(\"https://api.themoviedb.org/3/search/movie?api_key=\".concat(API_KEY,\"&query=\").concat(encodeURIComponent(movieName),\"&language=en-US\"));// Check if any movie found with the given name\nif(response.data.results.length>0){const movieId=response.data.results[0].id;// Get the ID of the first movie in the search results\nconst movieResponse=await axios.get(\"https://api.themoviedb.org/3/movie/\".concat(movieId,\"?api_key=\").concat(API_KEY,\"&language=en-US\"));onMovieDetailsFetched(movieResponse.data);}else{console.error(\"Movie not found.\");onMovieDetailsFetched(null);}}catch(error){console.error(\"Error fetching movie details:\",error);onMovieDetailsFetched(null);}};fetchMovieDetails();},[movieName,onMovieDetailsFetched]);return;// Return loading message while fetching\n}export default MovieDetailsFetcher;","map":{"version":3,"names":["useEffect","axios","MovieDetailsFetcher","_ref","movieName","onMovieDetailsFetched","API_KEY","fetchMovieDetails","response","get","concat","encodeURIComponent","data","results","length","movieId","id","movieResponse","console","error"],"sources":["/app/src/components/fetchapitmbd.js"],"sourcesContent":["// MovieDetailsFetcher.jsx\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction MovieDetailsFetcher({ movieName, onMovieDetailsFetched }) {\n    useEffect(() => {\n        const API_KEY = \"d61ae016cfddbd20b6e8194e558cc4d8\";\n\n        const fetchMovieDetails = async () => {\n            try {\n                const response = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${encodeURIComponent(movieName)}&language=en-US`);\n                \n                // Check if any movie found with the given name\n                if (response.data.results.length > 0) {\n                    const movieId = response.data.results[0].id; // Get the ID of the first movie in the search results\n                    const movieResponse = await axios.get(`https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n                    onMovieDetailsFetched(movieResponse.data);\n                } else {\n                    console.error(\"Movie not found.\");\n                    onMovieDetailsFetched(null);\n                }\n            } catch (error) {\n                console.error(\"Error fetching movie details:\", error);\n                onMovieDetailsFetched(null);\n            }\n        };\n\n        fetchMovieDetails();\n\n    }, [movieName, onMovieDetailsFetched]);\n\n    return // Return loading message while fetching\n}\n\nexport default MovieDetailsFetcher;\n"],"mappings":"AAAA;AACA,OAASA,SAAS,KAAQ,OAAO,CACjC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,QAAS,CAAAC,mBAAmBA,CAAAC,IAAA,CAAuC,IAAtC,CAAEC,SAAS,CAAEC,qBAAsB,CAAC,CAAAF,IAAA,CAC7DH,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAM,OAAO,CAAG,kCAAkC,CAElD,KAAM,CAAAC,iBAAiB,CAAG,KAAAA,CAAA,GAAY,CAClC,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAP,KAAK,CAACQ,GAAG,sDAAAC,MAAA,CAAsDJ,OAAO,YAAAI,MAAA,CAAUC,kBAAkB,CAACP,SAAS,CAAC,mBAAiB,CAAC,CAEtJ;AACA,GAAII,QAAQ,CAACI,IAAI,CAACC,OAAO,CAACC,MAAM,CAAG,CAAC,CAAE,CAClC,KAAM,CAAAC,OAAO,CAAGP,QAAQ,CAACI,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACG,EAAE,CAAE;AAC7C,KAAM,CAAAC,aAAa,CAAG,KAAM,CAAAhB,KAAK,CAACQ,GAAG,uCAAAC,MAAA,CAAuCK,OAAO,cAAAL,MAAA,CAAYJ,OAAO,mBAAiB,CAAC,CACxHD,qBAAqB,CAACY,aAAa,CAACL,IAAI,CAAC,CAC7C,CAAC,IAAM,CACHM,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC,CACjCd,qBAAqB,CAAC,IAAI,CAAC,CAC/B,CACJ,CAAE,MAAOc,KAAK,CAAE,CACZD,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAEA,KAAK,CAAC,CACrDd,qBAAqB,CAAC,IAAI,CAAC,CAC/B,CACJ,CAAC,CAEDE,iBAAiB,CAAC,CAAC,CAEvB,CAAC,CAAE,CAACH,SAAS,CAAEC,qBAAqB,CAAC,CAAC,CAEtC,OAAO;AACX,CAEA,cAAe,CAAAH,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}