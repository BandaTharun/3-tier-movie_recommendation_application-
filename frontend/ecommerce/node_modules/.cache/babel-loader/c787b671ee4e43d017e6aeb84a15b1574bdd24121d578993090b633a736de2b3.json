{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nexport const AdmindataManageMovies = () => {\n  _s();\n  const [token, setToken] = useState('');\n  useEffect(() => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n    if (accessToken) {\n      // Set the success token value\n      setToken(accessToken);\n    } else {\n      // Display message to the user if not logged in\n      console.log(\"You haven't been logged in.\");\n    }\n  }, []);\n  const addMovie = (movieTitle, movieGenre, imageUrl) => {\n    return axios.post('/adminmanage_movies/', {\n      title: movieTitle,\n      genre: movieGenre,\n      image_url: imageUrl\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      // Handle success\n      console.log('Movie added successfully:', response.data);\n      return response.data; // Return response data\n    }).catch(error => {\n      // Handle error\n      console.error('Error adding movie:', error);\n      throw error; // Throw error to catch it in the calling function\n    });\n  };\n  const updateMovie = movieTitle => {\n    return axios.put('/adminmanage_movies/', {\n      title: movieTitle\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      // Handle success\n      console.log('Movie updated successfully:', response.data);\n      return response.data; // Return response data\n    }).catch(error => {\n      // Handle error\n      console.error('Error updating movie:', error);\n      throw error; // Throw error to catch it in the calling function\n    });\n  };\n  const deleteMovie = movieTitle => {\n    return axios.delete(`/adminmanage_movies/`, {\n      data: {\n        title: movieTitle\n      },\n      // Specify the request body with the movie title\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      // Handle success\n      console.log('Movie deleted successfully:', response.data);\n      return response.data; // Return response data\n    }).catch(error => {\n      // Handle error\n      console.error('Error deleting movie:', error);\n      throw error; // Throw error to catch it in the calling function\n    });\n  };\n\n  // No need to return JSX from this component\n  return null;\n};\n_s(AdmindataManageMovies, \"vf+oyXHY90mQMbpq6nUOg8QmBuc=\");\n_c = AdmindataManageMovies;\nvar _c;\n$RefreshReg$(_c, \"AdmindataManageMovies\");","map":{"version":3,"names":["React","useState","useEffect","axios","AdmindataManageMovies","_s","token","setToken","accessToken","localStorage","getItem","console","log","addMovie","movieTitle","movieGenre","imageUrl","post","title","genre","image_url","headers","Authorization","then","response","data","catch","error","updateMovie","put","deleteMovie","delete","_c","$RefreshReg$"],"sources":["/Users/Tharun/PycharmProjects/SE/full_stack/django-rest-framework-using-reactjs--project/frontend/ecommerce/src/components/admindataManagemovies.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const AdmindataManageMovies = () => {\n  const [token, setToken] = useState('');\n\n  useEffect(() => {\n    const accessToken = localStorage.getItem(\"accessToken\");\n\n    if (accessToken) {\n      // Set the success token value\n      setToken(accessToken);\n    } else {\n      // Display message to the user if not logged in\n      console.log(\"You haven't been logged in.\");\n    }\n  }, []);\n\n  const addMovie = (movieTitle, movieGenre, imageUrl) => {\n    return axios.post('/adminmanage_movies/', {\n      title: movieTitle,\n      genre: movieGenre,\n      image_url: imageUrl\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    })\n    .then(response => {\n      // Handle success\n      console.log('Movie added successfully:', response.data);\n      return response.data; // Return response data\n    })\n    .catch(error => {\n      // Handle error\n      console.error('Error adding movie:', error);\n      throw error; // Throw error to catch it in the calling function\n    });\n  };\n\n  const updateMovie = (movieTitle) => {\n    return axios.put('/adminmanage_movies/', {\n      title: movieTitle\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    })\n    .then(response => {\n      // Handle success\n      console.log('Movie updated successfully:', response.data);\n      return response.data; // Return response data\n    })\n    .catch(error => {\n      // Handle error\n      console.error('Error updating movie:', error);\n      throw error; // Throw error to catch it in the calling function\n    });\n  };\n\n  const deleteMovie = (movieTitle) => {\n    return axios.delete(`/adminmanage_movies/`, {\n      data: { title: movieTitle }, // Specify the request body with the movie title\n      headers: {\n        Authorization: `Bearer ${token}`,\n        \"Content-Type\": \"application/json\"\n      }\n    })\n    .then(response => {\n      // Handle success\n      console.log('Movie deleted successfully:', response.data);\n      return response.data; // Return response data\n    })\n    .catch(error => {\n      // Handle error\n      console.error('Error deleting movie:', error);\n      throw error; // Throw error to catch it in the calling function\n    });\n  };\n\n  // No need to return JSX from this component\n  return null;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}