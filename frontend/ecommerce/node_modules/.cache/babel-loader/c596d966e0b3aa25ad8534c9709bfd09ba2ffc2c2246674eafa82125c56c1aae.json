{"ast":null,"code":"import React from 'react';\nimport axios from 'axios';\nexport default function AdmindataManageMovies() {\n  // Function to send POST request\n  const addMovie = (movieTitle, movieGenre, imageUrl, accessToken) => {\n    axios.post('/adminmanage_movies/', {\n      title: movieTitle,\n      genre: movieGenre,\n      image_url: imageUrl\n    }, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      // Handle success\n      console.log('Movie added successfully:', response.data);\n      // You can update state or do any other action after adding the movie\n    }).catch(error => {\n      // Handle error\n      console.error('Error adding movie:', error);\n    });\n  };\n\n  // Function to send PUT request for updating movie\n  const updateMovie = (movieTitle, accessToken) => {\n    axios.put('/adminmanage_movies/', {\n      title: movieTitle\n    }, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      // Handle success\n      console.log('Movie updated successfully:', response.data);\n      // You can update state or do any other action after updating the movie\n    }).catch(error => {\n      // Handle error\n      console.error('Error updating movie:', error);\n    });\n  };\n\n  // Function to send DELETE request\n  const deleteMovie = (movieTitle, accessToken) => {\n    axios.delete(`/adminmanage_movies/${movieTitle}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => {\n      // Handle success\n      console.log('Movie deleted successfully:', response.data);\n      // You can update state or do any other action after deleting the movie\n    }).catch(error => {\n      // Handle error\n      console.error('Error deleting movie:', error);\n    });\n  };\n  return null; // You can return some JSX here if needed\n}\n_c = AdmindataManageMovies;\nvar _c;\n$RefreshReg$(_c, \"AdmindataManageMovies\");","map":{"version":3,"names":["React","axios","AdmindataManageMovies","addMovie","movieTitle","movieGenre","imageUrl","accessToken","post","title","genre","image_url","headers","Authorization","then","response","console","log","data","catch","error","updateMovie","put","deleteMovie","delete","_c","$RefreshReg$"],"sources":["/Users/Tharun/PycharmProjects/SE/full_stack/django-rest-framework-using-reactjs--project/frontend/ecommerce/src/components/admindataManagemovies.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nexport default function AdmindataManageMovies() {\n\n  // Function to send POST request\n  const addMovie = (movieTitle, movieGenre, imageUrl, accessToken) => {\n    axios.post('/adminmanage_movies/', {\n      title: movieTitle,\n      genre: movieGenre,\n      image_url: imageUrl\n    }, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Content-Type\": \"application/json\"\n      }\n    })\n    .then(response => {\n      // Handle success\n      console.log('Movie added successfully:', response.data);\n      // You can update state or do any other action after adding the movie\n    })\n    .catch(error => {\n      // Handle error\n      console.error('Error adding movie:', error);\n    });\n  };\n\n  // Function to send PUT request for updating movie\n  const updateMovie = (movieTitle, accessToken) => {\n    axios.put('/adminmanage_movies/', {\n      title: movieTitle\n    }, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Content-Type\": \"application/json\"\n      }\n    })\n    .then(response => {\n      // Handle success\n      console.log('Movie updated successfully:', response.data);\n      // You can update state or do any other action after updating the movie\n    })\n    .catch(error => {\n      // Handle error\n      console.error('Error updating movie:', error);\n    });\n  };\n\n  // Function to send DELETE request\n  const deleteMovie = (movieTitle, accessToken) => {\n    axios.delete(`/adminmanage_movies/${movieTitle}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n        \"Content-Type\": \"application/json\"\n      }\n    })\n    .then(response => {\n      // Handle success\n      console.log('Movie deleted successfully:', response.data);\n      // You can update state or do any other action after deleting the movie\n    })\n    .catch(error => {\n      // Handle error\n      console.error('Error deleting movie:', error);\n    });\n  };\n\n  return null; // You can return some JSX here if needed\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAEzB,eAAe,SAASC,qBAAqBA,CAAA,EAAG;EAE9C;EACA,MAAMC,QAAQ,GAAGA,CAACC,UAAU,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,WAAW,KAAK;IAClEN,KAAK,CAACO,IAAI,CAAC,sBAAsB,EAAE;MACjCC,KAAK,EAAEL,UAAU;MACjBM,KAAK,EAAEL,UAAU;MACjBM,SAAS,EAAEL;IACb,CAAC,EAAE;MACDM,OAAO,EAAE;QACPC,aAAa,EAAG,UAASN,WAAY,EAAC;QACtC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACDO,IAAI,CAACC,QAAQ,IAAI;MAChB;MACAC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEF,QAAQ,CAACG,IAAI,CAAC;MACvD;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACd;MACAJ,OAAO,CAACI,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,WAAW,GAAGA,CAACjB,UAAU,EAAEG,WAAW,KAAK;IAC/CN,KAAK,CAACqB,GAAG,CAAC,sBAAsB,EAAE;MAChCb,KAAK,EAAEL;IACT,CAAC,EAAE;MACDQ,OAAO,EAAE;QACPC,aAAa,EAAG,UAASN,WAAY,EAAC;QACtC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACDO,IAAI,CAACC,QAAQ,IAAI;MAChB;MACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,QAAQ,CAACG,IAAI,CAAC;MACzD;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACd;MACAJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMG,WAAW,GAAGA,CAACnB,UAAU,EAAEG,WAAW,KAAK;IAC/CN,KAAK,CAACuB,MAAM,CAAE,uBAAsBpB,UAAW,EAAC,EAAE;MAChDQ,OAAO,EAAE;QACPC,aAAa,EAAG,UAASN,WAAY,EAAC;QACtC,cAAc,EAAE;MAClB;IACF,CAAC,CAAC,CACDO,IAAI,CAACC,QAAQ,IAAI;MAChB;MACAC,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEF,QAAQ,CAACG,IAAI,CAAC;MACzD;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACd;MACAJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACJ,CAAC;EAED,OAAO,IAAI,CAAC,CAAC;AACf;AAACK,EAAA,GAlEuBvB,qBAAqB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}