{"ast":null,"code":"var _jsxFileName = \"/Users/Tharun/PycharmProjects/SE/full_stack/django-rest-framework-using-reactjs--project/frontend/ecommerce/src/components/screens/ProductScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Row, Col, Image, ListGroup, Button, Card, Container } from \"react-bootstrap\";\nimport Rating from \"../Rating\";\nimport axios from \"axios\";\nimport Footer from \"../Footer\"; // Import Footer component\n\n// Import movies_data function from appropriate file\nimport movies_data from \"../fetchmoviesdata\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ProductScreen() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [rating, setRating] = useState(0); // State to hold the user's rating\n  const [movies, setMovies] = useState([]); // State to hold the movies data\n\n  useEffect(() => {\n    // Fetch movies data\n    const movies1 = movies_data();\n    setMovies(movies1);\n  }, []);\n\n  // Function to retrieve movie image by ID\n  const getMovieImage = (movies, movieId) => {\n    const movie = movies.find(movie => movie.id === parseInt(movieId));\n    return movie ? movie.image : null;\n  };\n\n  // Get movie image\n  const movieImage = getMovieImage(movies, id);\n\n  // Check if movies data is available\n  console.log(\"Movies data:\", movies);\n  console.log(\"Movies data length:\", movies.length);\n\n  // Handle case when movie image is not available\n  const renderMovieImage = () => {\n    if (!movieImage) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No image available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(Image, {\n      src: movieImage,\n      alt: \"Movie\",\n      fluid: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  };\n\n  // Function to handle submitting the rating\n  const submitRating = async () => {\n    try {\n      // Get the access token from local storage\n      const accessToken = localStorage.getItem('accessToken');\n\n      // Send the rating data to the backend along with the JWT token\n      await axios.post(`/submit_rating/${id}`, {\n        rating\n      }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n\n      // Optionally, you can update the UI or show a confirmation message\n      console.log(\"Rating submitted successfully!\");\n    } catch (error) {\n      // Handle error\n      console.error(\"Error submitting rating:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"btn btn-dark my-3\",\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: renderMovieImage()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Rating, {\n                value: rating,\n                onChange: value => setRating(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: submitRating,\n                className: \"btn-block\",\n                disabled: rating === 0,\n                children: \"Submit Rating\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n_s(ProductScreen, \"v4o7j3kSjGq1WvT8dXF0y5vREnc=\", false, function () {\n  return [useParams];\n});\n_c = ProductScreen;\nexport default ProductScreen;\nvar _c;\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"names":["React","useEffect","useState","Link","useParams","Row","Col","Image","ListGroup","Button","Card","Container","Rating","axios","Footer","movies_data","jsxDEV","_jsxDEV","ProductScreen","_s","id","rating","setRating","movies","setMovies","movies1","getMovieImage","movieId","movie","find","parseInt","image","movieImage","console","log","length","renderMovieImage","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","fluid","submitRating","accessToken","localStorage","getItem","post","headers","Authorization","error","to","className","md","variant","Item","value","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/Tharun/PycharmProjects/SE/full_stack/django-rest-framework-using-reactjs--project/frontend/ecommerce/src/components/screens/ProductScreen.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { Row, Col, Image, ListGroup, Button, Card, Container } from \"react-bootstrap\";\nimport Rating from \"../Rating\";\nimport axios from \"axios\";\nimport Footer from \"../Footer\"; // Import Footer component\n\n// Import movies_data function from appropriate file\nimport movies_data from \"../fetchmoviesdata\";\n\nfunction ProductScreen() {\n  const { id } = useParams();\n  const [rating, setRating] = useState(0); // State to hold the user's rating\n  const [movies, setMovies] = useState([]); // State to hold the movies data\n\n  useEffect(() => {\n    // Fetch movies data\n    const movies1 = movies_data();\n    setMovies(movies1);\n  }, []);\n\n  // Function to retrieve movie image by ID\n  const getMovieImage = (movies, movieId) => {\n    const movie = movies.find(movie => movie.id === parseInt(movieId));\n    return movie ? movie.image : null;\n  };\n\n  // Get movie image\n  const movieImage = getMovieImage(movies, id);\n\n  // Check if movies data is available\n  console.log(\"Movies data:\", movies);\n  console.log(\"Movies data length:\", movies.length);\n\n  // Handle case when movie image is not available\n  const renderMovieImage = () => {\n    if (!movieImage) {\n      return (\n        <div>No image available</div>\n      );\n    }\n    return <Image src={movieImage} alt=\"Movie\" fluid />;\n  };\n\n  // Function to handle submitting the rating\n  const submitRating = async () => {\n    try {\n      // Get the access token from local storage\n      const accessToken = localStorage.getItem('accessToken');\n\n      // Send the rating data to the backend along with the JWT token\n      await axios.post(`/submit_rating/${id}`, { rating }, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n\n      // Optionally, you can update the UI or show a confirmation message\n      console.log(\"Rating submitted successfully!\");\n    } catch (error) {\n      // Handle error\n      console.error(\"Error submitting rating:\", error);\n    }\n  };\n\n  return (\n    <Container>\n      <div>\n        <Link to=\"/\" className=\"btn btn-dark my-3\">\n          Go Back\n        </Link>\n\n        <Row>\n          <Col md={6}>\n            {renderMovieImage()}\n          </Col>\n\n          <Col md={3}>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h3>{/* You should provide the title here */}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Rating value={rating} onChange={(value) => setRating(value)} />\n                {/* Display the Rating component with a value and onChange handler */}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button onClick={submitRating} className=\"btn-block\" disabled={rating === 0}>\n                  Submit Rating\n                </Button>\n                {/* Button to submit the rating, disabled if no rating is selected */}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n        </Row>\n      </div>\n      <Footer /> {/* Include Footer component here */}\n    </Container>\n  );\n}\n\nexport default ProductScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}