{"ast":null,"code":"import{useState,useEffect}from\"react\";import axios from\"axios\";function useMyList(){// Initialize state to store movie list\nconst[movieList,setMovieList]=useState([]);// Fetch data and update movieList\nuseEffect(()=>{// Fetch data function\nconst fetchData=async()=>{try{const accessToken=localStorage.getItem(\"accessToken\");// Use axios directly without converting response to JSON\nconst response=await axios.get(\"/recommend/\",{headers:{Authorization:\"Bearer \".concat(accessToken)}});// Update state with response data\nsetMovieList(response.data.movie_list);}catch(error){console.error('Error fetching movie list:',error);}};fetchData();// Call the fetch function\n},[]);// Empty dependency array to run only once\nreturn movieList;}export default useMyList;","map":{"version":3,"names":["useState","useEffect","axios","useMyList","movieList","setMovieList","fetchData","accessToken","localStorage","getItem","response","get","headers","Authorization","concat","data","movie_list","error","console"],"sources":["/app/src/components/fetchrecommenddata.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction useMyList() {\n    // Initialize state to store movie list\n    const [movieList, setMovieList] = useState([]);\n\n    // Fetch data and update movieList\n    useEffect(() => {\n        // Fetch data function\n        const fetchData = async () => {\n            try {\n                const accessToken = localStorage.getItem(\"accessToken\");\n                // Use axios directly without converting response to JSON\n                const response = await axios.get(\"/recommend/\", {\n                    headers: {\n                        Authorization: `Bearer ${accessToken}`,\n                    },\n                });\n                // Update state with response data\n                setMovieList(response.data.movie_list);\n            } catch (error) {\n                console.error('Error fetching movie list:', error);\n            }\n        };\n\n        fetchData(); // Call the fetch function\n    }, []); // Empty dependency array to run only once\n\n    return movieList;\n}\n\nexport default useMyList;\n"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC3C,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB,QAAS,CAAAC,SAASA,CAAA,CAAG,CACjB;AACA,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGL,QAAQ,CAAC,EAAE,CAAC,CAE9C;AACAC,SAAS,CAAC,IAAM,CACZ;AACA,KAAM,CAAAK,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC1B,GAAI,CACA,KAAM,CAAAC,WAAW,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACvD;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAR,KAAK,CAACS,GAAG,CAAC,aAAa,CAAE,CAC5CC,OAAO,CAAE,CACLC,aAAa,WAAAC,MAAA,CAAYP,WAAW,CACxC,CACJ,CAAC,CAAC,CACF;AACAF,YAAY,CAACK,QAAQ,CAACK,IAAI,CAACC,UAAU,CAAC,CAC1C,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CACtD,CACJ,CAAC,CAEDX,SAAS,CAAC,CAAC,CAAE;AACjB,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,MAAO,CAAAF,SAAS,CACpB,CAEA,cAAe,CAAAD,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}